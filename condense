#!/usr/bin/env python

import moviepy
from moviepy.editor import VideoFileClip, concatenate_videoclips
import datetime
import os, sys
import stat
import json
from stat import *

baseDir = "/Volumes/CNTR_ROAM3"
outDir = "output"

def process_file(file, mtime):

    clip = VideoFileClip(file)
    clips = []
    meta = {}
    segments = 0
    i=20
    while i <= int(clip.duration-3):
        tmp = clip.subclip(i,i+3)
        clips.append(tmp.crossfadein(.5))
        i += 60
        segments += 1


    timestamp = datetime.datetime.fromtimestamp(int(s[ST_MTIME])).strftime('%Y%m%d-%H%M%S')

    meta["starttime"] = int(mtime - clip.duration)
    meta["endtime"]   = int(mtime)
    meta["duration"]  = int(clip.duration)
    meta["segments"]  = segments
    meta["mediaurl"]  = ""

    jfile = open("{}/{}.json".format(outDir,timestamp), "w")
    json.dump(meta, jfile)
    jfile.close()

    out = concatenate_videoclips(clips, padding=-.5, method="compose")
    smaller = out.resize(height=120)
    outfilename = "{}/{}.mp4".format(outDir, timestamp)

    out.write_videofile(outfilename)
    #smaller.write_gif("{}.gif".format(outfilename),fps=5)
    smaller.write_videofile("{}.webm".format(outfilename),fps=5)

    del smaller
    del out
    del clip


if __name__ == "__main__":

    if len(sys.argv) >= 2:
        s = os.stat(sys.argv[1])
        process_file(sys.argv[1], s[ST_MTIME])
    else:
        if os.path.isdir(baseDir):
            for root, dirs, files in os.walk(baseDir):
                if "Trashes" in root: continue
                for file in files:
                    if "Trashes" in root: continue
                    if file.endswith(".MP4"):
                        s = os.stat(os.path.join(root, file))
                        print "{} {}".format(root, file)
                        process_file(os.path.join(root, file), s[ST_MTIME])
        else:
            print "Input directory {} does not exist. Not mounted?".format(baseDir)
            sys.exit(1)
